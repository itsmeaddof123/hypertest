@using Sandbox;
@using Sandbox.UI;
@inherits PanelComponent
@namespace Sandbox

<root>
	<div class="header"><p>HyperTile</p></div>
	<div class="subheader"><p>@SubHeader</p></div>
	<div class="body"><p>@Body</p></div>
	<div class="buttons">
		<div class="button" onclick=@OnPlay><p>Play</p></div>
		<div class="button" onclick=@OnSettings><p>More Settings</p></div>
		<div class="button" onclick=@OnInfo><p>More Info</p></div>
	</div>
	<div class="setting">
		<div class="settingsblock">
			<p>Rooms Per Corner:</p>
			<div class="settingsbutton" onclick=@RoomsPerVertexDown><p>-</p></div>
			<p> @GameConfig.RoomsPerVertex </p>
			<div class="settingsbutton" onclick=@RoomsPerVertexUp><p>+</p></div>
		</div>
	</div>
	<div class="setting">
		<div class="settingsblock">
			<p>Game Mode:</p>
			<div class="settingsbutton" onclick=@GameModeDown><p>←</p></div>
			<p> @GameModeStatus </p>
			<div class="settingsbutton" onclick=@GameModeUp><p>→</p></div>
		</div>
	</div>
</root>

@code
{
	[Property] public GameConfig GameConfig { get; set; }
	[Property] public GameObject SettingsObject { get; set; }
	[Property] public GameObject InfoObject { get; set; }

	private string SubHeader = "How many squares fit around one corner?";
	private string Body =
		"Normally, four. In this simulated square tiling of a hyperbolic plane? As many as you want!\n\n" + 
		"For your first time, go ahead and hit Play. After that, try out other various settings. I recommend " +
		"these settings: 7 Rooms Per Corner, Paint The Maze Game Mode, No Walls. " +
		"Read about the process in More Info.";

	// Rooms Per Vertex 
	private void RoomsPerVertexDown()
	{
		GameConfig.RoomsPerVertex--;
	}
	private void RoomsPerVertexUp()
	{
		GameConfig.RoomsPerVertex++;
	}

	// Game Mode
	private string GameModeStatus;
	private List<string> GameModes = new List<string> {"Explore", "Paint", "Mazelike", "Paint The Maze"};
	private void GameModeDown()
	{
		GameConfig.GameMode = (GameConfig.GameMode + 3) % 4;
		GameModeStatus = GameModes[GameConfig.GameMode];
	}
	private void GameModeUp()
	{
		GameConfig.GameMode = (GameConfig.GameMode + 1) % 4;
		GameModeStatus = GameModes[GameConfig.GameMode];
	}

	protected override void OnStart()
	{
		GameModeStatus = GameModes[GameConfig.GameMode];
	}

	private void OnPlay()
	{
		Scene.LoadFromFile("scenes/main.scene");
	}
	
	private void OnSettings()
	{
		SettingsObject.Enabled = true;
		GameObject.Enabled = false;
	}
	
	private void OnInfo()
	{
		InfoObject.Enabled = true;
		GameObject.Enabled = false;
	}

	protected override int BuildHash() => System.HashCode.Combine( GameConfig.RoomsPerVertex, GameModeStatus );
}
